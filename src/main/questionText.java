/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;
import java.util.ArrayList;
import com.github.cliftonlabs.json_simple.*;
import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author james
 */
public class questionText extends javax.swing.JDialog 
{
    ArrayList<JsonObject> questions = null;
    Integer prevNum = -1;
    JsonObject currentQuestion;
    String correctAnswer;
    Integer correctAnswers = 0;
    /**
     * Creates new form questionText
     */
    public questionText(main inParent, ArrayList<JsonObject> inQuestions) {
        super(inParent,true);
        initComponents();
        questions = inQuestions;
        firstTestLoad();
        newQuestion();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionLabel = new javax.swing.JLabel();
        nextCorrectCheckBox = new javax.swing.JCheckBox();
        trackCheckBox = new javax.swing.JCheckBox();
        correctLabel = new javax.swing.JLabel();
        aButton = new javax.swing.JButton();
        bButton = new javax.swing.JButton();
        cButton = new javax.swing.JButton();
        dButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        questionLabel.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        questionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        questionLabel.setText("jLabel1");
        questionLabel.setBorder(null);

        nextCorrectCheckBox.setSelected(true);
        nextCorrectCheckBox.setText("Next On Correct");

        trackCheckBox.setText("Track Correct");

        correctLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctLabel.setText("jLabel2");
        correctLabel.setBorder(null);

        aButton.setText("jButton1");
        aButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aButtonActionPerformed(evt);
            }
        });

        bButton.setText("jButton1");
        bButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bButtonActionPerformed(evt);
            }
        });

        cButton.setText("jButton1");
        cButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButtonActionPerformed(evt);
            }
        });

        dButton.setText("jButton1");
        dButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dButtonActionPerformed(evt);
            }
        });

        jButton5.setText("Next");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(trackCheckBox)
                            .addComponent(nextCorrectCheckBox))
                        .addGap(32, 32, 32)
                        .addComponent(correctLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(aButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(bButton, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(dButton, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nextCorrectCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trackCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(correctLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cButton))
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        newQuestion();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void aButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aButtonActionPerformed
        if (correctAnswer.equals("A"))
        {
            if (trackCheckBox.isSelected())
            {
                correctAnswers++;
                correctLabel.setText(correctAnswers.toString());
            }
            if (nextCorrectCheckBox.isSelected())
            {
                newQuestion();
            }
        }
    }//GEN-LAST:event_aButtonActionPerformed

    private void bButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButtonActionPerformed
        if (correctAnswer.equals("B"))
        {
            if (trackCheckBox.isSelected())
            {
                correctAnswers++;
                correctLabel.setText(correctAnswers.toString());
            }
            if (nextCorrectCheckBox.isSelected())
            {
                newQuestion();
            }
        }
    }//GEN-LAST:event_bButtonActionPerformed

    private void cButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButtonActionPerformed
        if (correctAnswer.equals("C"))
        {
            if (trackCheckBox.isSelected())
            {
                correctAnswers++;
                correctLabel.setText(correctAnswers.toString());
            }
            if (nextCorrectCheckBox.isSelected())
            {
                newQuestion();
            }
        }
    }//GEN-LAST:event_cButtonActionPerformed

    private void dButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dButtonActionPerformed
        if (correctAnswer.equals("D"))
        {
            if (trackCheckBox.isSelected())
            {
                correctAnswers++;
                correctLabel.setText(correctAnswers.toString());
            }
            if (nextCorrectCheckBox.isSelected())
            {
                newQuestion();
            }
        }
    }//GEN-LAST:event_dButtonActionPerformed

    private void newQuestion()
    {
        Integer newNum = -1;
        do
        {
            newNum = randNum();
        } while(newNum == prevNum);
        
        prevNum = newNum;
        currentQuestion = questions.get(newNum);
        
        // Set Label and Button Text
        questionLabel.setText(currentQuestion.get("question").toString());
        aButton.setText(currentQuestion.get("answerA").toString());
        bButton.setText(currentQuestion.get("answerB").toString());
        cButton.setText(currentQuestion.get("answerC").toString());
        dButton.setText(currentQuestion.get("answerD").toString());
        correctAnswer = currentQuestion.get("correct").toString();
    }
    
    private int randNum ()
    {
        Integer num = ThreadLocalRandom.current().nextInt(0, questions.size());
        System.out.println(num);
        return num;
    }
    
    private void firstTestLoad ()
    {
        System.out.println("Received Question List, Size: " + questions.size());
        Integer arraySize = questions.size();
        questionLabel.setText(arraySize.toString());
        correctLabel.setText(correctAnswers.toString());
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aButton;
    private javax.swing.JButton bButton;
    private javax.swing.JButton cButton;
    private javax.swing.JLabel correctLabel;
    private javax.swing.JButton dButton;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox nextCorrectCheckBox;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JCheckBox trackCheckBox;
    // End of variables declaration//GEN-END:variables
}
